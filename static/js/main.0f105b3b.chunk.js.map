{"version":3,"sources":["MenuModalComponents/AccordianTab.jsx","MenuModalComponents/TabHolder.jsx","MenuModalComponents/SelectedSubject.jsx","MenuModalComponents/SelectedSubjectsHolder.jsx","MenuModalComponents/Modal.jsx","FlashcardComponents/IndexDisplay.jsx","FlashcardComponents/Card.jsx","FlashcardComponents/FlashcardHolder.jsx","Button.jsx","HelpMessage.jsx","SimulatedResponse/staticData.js","App.js","index.js"],"names":["AccordianTab","props","panelClassName","togglePanel","useState","displayContent","content","map","anotherTab","_jsx","hash","tabName","addOrRemoveSubject","selectedSubjects","_jsxs","onClick","e","stopPropagation","className","includes","children","TabHolder","tabs","tab","SelectedSubject","buttonLabel","subject","split","splice","join","selectedSubject","SelectedSubjectsHolder","Modal","length","isMobile","style","display","menuModalDisplay","functions","IndexDisplay","currentIndex","Card","flipped","setFlip","dragFunctionCalled","setDragFunctionCalled","entireCardOpacity","setCardOpacity","xy","set","useSpring","transform","opacity","concat","config","mass","tension","friction","bind","useGesture","onDrag","_ref","down","movement","velocity","onDragEnd","_ref2","delta","xDelta","yDelta","distance","direction","xDir","yDir","trigger","dir","x","Math","abs","round","y","window","innerWidth","innerHeight","onReleaseFunction","console","log","setTimeout","index","a","div","_objectSpread","onMouseUp","toggleOffSwipeHelpMessages","toggleOffClickHelpMessage","interpolate","t","Domain","Subdomain","Topic","front","o","back","FlashcardHolder","calledFunction","setBackgroundMessage","showMessage","message","blankCardContent","card","cardContent","stats","decrementCardIndex","incrementCardIndex","shuffleCard","removeCard","backgroundMessage","Button","state","toggle","from","duration","active","button","title","clickFunc","onMouseOver","range","output","String","fromCharCode","HelpMessage","shouldDisplay","setShouldDisplay","messageType","cards","flagged","dict","reduce","acc","domain","subdomain","topic","subdomains","topics","Object","keys","App","Component","constructor","super","this","responseCards","possibleSubjects","windowWidth","windowHeight","isPortrait","isDarkMode","requestNewCards","cardIndex","displaySwipeHelpMessages","flashMenuIcon","displayClickHelpMessage","clickMessageHaveNotBeenDisplayed","fetch","then","response","json","data","setState","catch","error","flagFlashcard","toggleMenuModal","addOrRemoveSubjectFromSelectedSubjects","shuffleAllCards","handleResize","toggleFlashMenuIcon","undefined","flaggedCard","method","headers","body","JSON","stringify","success","shuffleCards","i","_","requestSubjects","item","staticCards","filter","subjectIsPresent","newSelectedSubjects","push","unshuffledCards","randomIndex","floor","random","temp","componentDidMount","addEventListener","componentWillUnmount","flagCardButton","clickHelpMessage","swipeHelpMessages","render","ReactDOM","document","getElementById"],"mappings":"waAGe,SAASA,EAAaC,GACjC,MAAOC,EAAgBC,GAAeC,mBAAS,aAC/C,IAAIC,EAiBJ,OAhBIJ,EAAMK,UACND,EACIJ,EAAMK,QAAQC,KACDC,GACGC,cAACT,EAAY,CAETU,KACMT,EAAMS,KAAO,IAAMF,EAAWG,QACpCA,QAAYH,EAAWG,QACvBL,QAAYE,EAAWF,QACvBM,mBACMX,EAAMW,mBACZC,iBACMZ,EAAMY,kBARJL,EAAWG,YAY3CG,eAAA,UAEIC,QACKd,EAAMK,QAYMU,IAGGA,EAAEC,kBACFd,EAAgC,cAAnBD,EACG,YAAc,YAAa,EAhB9Cc,IAIGf,EAAMW,mBAAmBX,EAAMS,MAC/BM,EAAEC,kBACFd,EAAgC,cAAnBD,EACG,YAAc,YAAa,EAY/DgB,UAAcjB,EAAMY,iBAAiBM,SAASlB,EAAMS,MACpC,kBAAoB,oBAAqBU,SAAA,CACpDnB,EAAMU,QAIXF,cAAA,KAAGS,UAAcjB,EAAMK,QAAUJ,EAAiB,YAAakB,SACzDf,MAIlB,CCtDe,SAASgB,EAAUpB,GAC9B,GAAIA,EAAMqB,KAAK,CACX,MAAMA,EAAOrB,EAAMqB,KAAKf,KACPgB,GAAQd,cAACT,EAAY,CAENW,QAAYY,EAAIZ,QAChBL,QAAYiB,EAAIjB,QAChBI,KAAS,GAAKa,EAAIZ,QAClBC,mBACMX,EAAMW,mBACZC,iBACKZ,EAAMY,kBAPHU,EAAIZ,WAS5C,OAAOG,eAAA,OAAKI,UAAU,YAAWE,SAAA,CAAC,IAAEE,EAAK,MAC7C,CACJ,C,YChBe,SAASE,EAAgBvB,GAEpC,MAAMwB,EAAcxB,EAAMyB,QAAQC,MAAM,KAAKC,OAAO,EAAE,GAAGC,KAAK,KAC9D,OACIpB,cAAA,UAAoCS,UAAY,kBACxCH,QAAYA,IAAMd,EAAMW,mBAAmBX,EAAMyB,SAAUN,SAC7DK,GAFOxB,EAAM6B,gBAK3B,CCRe,SAASC,EAAuB9B,GAC3C,MAAMY,EAAmBZ,EAAMY,iBAAiBN,KACnBuB,GACGrB,cAACe,EAAe,CAEZZ,mBACMX,EAAMW,mBACZc,QAAYI,GAHPA,KAMzC,OACIrB,cAAA,OAAKS,UAAU,yBAAwBE,SAAGP,GAElD,CCXe,SAASmB,EAAM/B,GA4B1B,OAxBKA,EAAMqB,KAAKW,OAMZhC,EAAMiC,SACNzB,cAAA,OAAKS,UAAU,QAAQiB,MAAQ,CAAEC,QAASnC,EAAMoC,kBAAmBjB,SAC/DX,cAACY,EAAS,CACNR,iBAAqBZ,EAAMY,iBAC3BS,KAASrB,EAAMqB,KACfV,mBAAuBX,EAAMqC,UAAU1B,uBAG/CE,eAAA,OAAKI,UAAU,QAAQiB,MAAQ,CAAEC,QAASnC,EAAMoC,kBAAmBjB,SAAA,CAC/DX,cAACY,EAAS,CACNR,iBAAqBZ,EAAMY,iBAC3BS,KAASrB,EAAMqB,KACfV,mBAAuBX,EAAMqC,UAAU1B,qBAC3CH,cAACsB,EAAsB,CACnBlB,iBAAqBZ,EAAMY,iBAC3BD,mBAAuBX,EAAMqC,UAAU1B,wBApB/CH,cAAA,OAAKS,UAAU,QAAQiB,MAAQ,CAAEC,QAASnC,EAAMoC,kBAAmBjB,SAC/DN,eAAA,OAAKI,UAAU,aAAYE,SAAA,CAACX,cAAA,UAAWA,cAAA,UAAWA,cAAA,UAAWA,cAAA,UAAWA,cAAA,UAAWA,cAAA,UAAWA,cAAA,UAAWA,cAAA,cAuBrH,C,6BC/Be,SAAS8B,EAAatC,GAS/B,OAReA,EAAMgC,OAAS,EACfnB,eAAA,MAAII,UAAU,QAAOE,SAAA,CACVnB,EAAMuC,aAAa,IAEnBvC,EAAMgC,UAGjB,IAErB,C,MCCe,SAASQ,EAAKxC,GAE3B,MAAOyC,EAASC,GAAWvC,oBAAS,IAE7BwC,EAAoBC,GAAyBzC,oBAAS,IACtD0C,EAAmBC,GAAkB3C,mBAAS,KAI9C,GAAE4C,GAAMC,GAAOC,aAAU,MAASF,GAAI,CAAC,EAAI,QAI5C,UAACG,EAAS,QAAEC,GAAWF,YAAU,CACrCE,QAASV,EAAU,EAAI,EACvBS,UAAU,6BAADE,OAA+BX,EAAU,EAAI,IAAG,QACzDY,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAGvCC,EAAOC,YAAW,CAEpBC,OAAQC,IAA+B,IAA9B,KAACC,EAAI,SAAEC,EAAQ,SAAEC,GAASH,EAC/BZ,EAAI,CAAED,GAAIc,EAAOC,EAAW,CAAC,EAAE,IAAK,EAGxCE,UAAWC,IACqD,IADpD,KAAEJ,EAAMK,OAAQC,EAAOC,GAAO,SAC5BC,EAAUC,WAAYC,EAAKC,GAAK,SAAET,GAAUE,EAEtD,MAAMQ,EAAUV,EAAW,GACrBW,EAAM,CACEC,EAAGC,KAAKC,IAAIN,GAAQK,KAAKC,IAAIL,GACDI,KAAKE,MAAMP,GAEX,EAC5BQ,EAAGH,KAAKC,IAAIN,GAAQK,KAAKC,IAAIL,GACD,EAEAI,KAAKE,MAAMN,IAE/CG,EAAIF,GACC,IAAMO,OAAOC,YAAcP,EAAIC,EAEhCd,EAAOM,EAAS,EACpBY,EAAIN,GACC,IAAMO,OAAOE,aAAeR,EAAIK,EAEjClB,EAAOO,EAAS,EAC1BpB,EAAI,CAAED,GAAI,CAAC4B,EAAEI,KACT/E,EAAMmF,mBAAqBV,IAGvBhC,IACAC,GAAQ,GACR0C,QAAQC,IAAI,OAGhBrF,EAAMmF,kBAAkBT,GAExB9B,GAAsB,GACtB0C,YAAW,KAGPxC,EAAe,GACfE,EAAI,CAAED,GAAI,EAAQ,IAAP2B,EAAIC,GAAe,IAAPD,EAAIK,KAG3BO,YAAW,KACPxC,EAAe,GACfE,EAAI,CAAED,GAAI,CAAC,EAAE,IAAK,GAAE,IAAI,GAC9B,KACN,GAEHM,KACCkC,EAAQ/E,cAAC8B,EAAY,CACTC,aAAiBvC,EAAMuC,aAAe,EACtCP,OAAWhC,EAAMgC,SAEnC,OACEnB,eAAC2E,IAAEC,IAAGC,wBAAA,CACFzE,UAAU,OACV0E,UAAaA,KAAchD,GACCC,GAAsB,GAEtB5C,EAAM4F,+BAGN5F,EAAM6F,4BACNnD,GAASD,GACb,GAGpBgB,KAAM,IACVvB,MAAO,CAAEiB,QAASN,EACdK,UAAWH,EAAG+C,aAAY,CAACnB,EAAGI,IAAC,eAAA3B,OAAoBuB,EAAC,QAAAvB,OAAO2B,EAAC,aAC9D5D,SAAA,CACAN,eAAC2E,IAAEC,IAAG,CACAxE,UAAU,IACTiB,MAAO,CAAEiB,UACAD,UACEA,EAAU4C,aAAYC,GAAC,GAAA3C,OAAO2C,EAAC,uBAC7C5E,SAAA,CACAN,eAAA,OAAKI,UAAU,QAAOE,SAAA,CAClBN,eAAA,KAAAM,SAAA,CAAInB,EAAMgG,OAAO,IAAEhG,EAAMiG,UAAU,IAAEjG,EAAMkG,SAC3C1F,cAAA,KAAAW,SAAG,aAEPX,cAAA,KAAGS,UAAU,UAASE,SAAEnB,EAAMmG,QAC5BZ,KAEN1E,eAAC2E,IAAEC,IAAG,CAACxE,UAAU,IACTiB,MAAO,CAAEiB,QAASA,EAAQ2C,aAAYM,GAAK,EAAIA,IAAIlD,UAC1CA,GACd/B,SAAA,CACCN,eAAA,OAAKI,UAAU,QAAOE,SAAA,CAClBN,eAAA,KAAAM,SAAA,CAAInB,EAAMgG,OAAO,IAAEhG,EAAMiG,UAAU,IAAEjG,EAAMkG,SAC3C1F,cAAA,KAAAW,SAAG,YAEPX,cAAA,KAAGS,UAAU,UAASE,SAAEnB,EAAMqG,OAC5Bd,QAIhB,CChIe,SAASe,EAAgBtG,GACpC,MAAOuG,EAAeC,GAAwBrG,mBAAS,MACjDsG,EAAeC,IACjBpB,YAAW,KAAKkB,EAAqBE,EAAQ,GAAE,KAC/CpB,YAAW,KAAKkB,EAAqB,KAAK,GAAE,IAAK,EAE/CG,EACF,8DACEC,EAAO5G,EAAM6G,YACfrG,cAACgC,EAAI,CACDD,aAAiBvC,EAAM8G,MAAMvE,aAC7BP,OAAWhC,EAAM8G,MAAM9E,OACvBC,SAAYjC,EAAMiC,SAClBkE,MAAUnG,EAAM6G,YAAYV,MAC5BE,KAASrG,EAAM6G,YAAYR,KAC3BL,OAAWhG,EAAM8G,MAAM9E,OACPhC,EAAM6G,YAAYb,OAElB,KAEhBC,UAAcjG,EAAM8G,MAAM9E,OACVhC,EAAM6G,YAAYZ,UAElB,KAEhBC,MAAUlG,EAAM8G,MAAM9E,OACNhC,EAAM6G,YAAYX,MAElB,KAEhBL,0BACM7F,EAAMqC,UAAUwD,0BACtBD,2BACM5F,EAAMqC,UAAUuD,2BACtBT,kBAAuBT,IACX,MAAM,EAACC,EAAC,EAACI,GAAKL,EACVC,EACIA,EAAE,GACF3E,EAAMqC,UAAU0E,qBAChBN,EAAY,aACN9B,EAAE,IACR3E,EAAMqC,UAAU2E,qBAChBP,EAAY,SAET1B,IACHA,EAAE,GACF/E,EAAMqC,UAAU4E,cAChBR,EAAY,YACL1B,EAAE,IACT/E,EAAMqC,UAAU6E,aAChBT,EAAY,WAEpB,IAKhBjG,cAACgC,EAAI,CACDqD,0BACM7F,EAAMqC,UAAUwD,0BACtBD,2BACM5F,EAAMqC,UAAUuD,2BACtB3D,SAAajC,EAAMiC,SACnBkE,MAAUQ,EACVN,KAASM,EACTX,OAAW,KACXC,UAAc,KACdC,MAAU,KACVf,kBAAuBT,QAEzByC,EAAoBZ,EACpB/F,cAAA,OAAKS,UAAU,oBAAmBE,SAAGoF,IAEpB,KACvB,OAAO1F,eAAA,OAAKI,UAAU,kBAAiBE,SAAA,CACzByF,EACAO,IAElB,C,MChFe,SAASC,EAAOpH,GAC3B,MAAOqH,EAAOC,GAAUnH,oBAAS,IAE3B,EAAEwE,GAAM1B,YAAU,CAAEsE,KAAM,CAAE5C,EAAG,GAAKA,EAAG0C,EAAQ,EAAI,EAAGhE,OAAQ,CAAEmE,SAAU,OAChF,IAAIC,EAASzH,EAAMyH,OAAS,UAAY,GAC1C,OAAOjH,cAACgF,IAAEkC,OAAM,CACNC,MAAS3H,EAAM2H,MACf1G,UAAajB,EAAMiB,UACCjB,EAAMiB,UAAYwG,EAElB,SAAWA,EAC/B3G,QAAUA,KACEd,EAAM4H,YACNN,GAAQD,EAAM,EAG1BQ,YAAcA,KACFP,GAAQD,EAAM,EAG1BnF,MAAO,CACLgB,UAAWyB,EACRmB,YAAY,CACXgC,MAAO,CAAC,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAC/CC,OAAQ,CAAC,EAAG,IAAM,GAAK,IAAK,GAAK,IAAK,KAAM,KACvCjC,aAAYnB,GAAC,SAAAvB,OAAauB,EAAC,QAClCxD,SACE6G,OAAOC,aAAajI,EAAMK,UAE5C,C,MC/Be,SAAS6H,EAAYlI,GAChC,MAAOmI,EAAeC,GAAoBjI,mBAASH,EAAMmI,eACzD,IAAI9H,EAAUG,cAAA,OAAKS,UAAU,YAuD7B,OAtDIkH,IAC0B,UAAtBnI,EAAMqI,YACNhI,EAAUQ,eAAA,OAAKC,QAASA,KACJd,EAAM4F,6BACNwC,GAAiB,EAAM,EAG5BnH,UAAU,gBAAeE,SAAA,CACxBX,cAAA,OAAKS,UAAU,UAASE,SAAC,wCACzBX,cAAA,OAAKS,UAAU,mBAAkBE,SAAC,cAErB,SAAtBnB,EAAMqI,YACbhI,EAAUQ,eAAA,OAAKC,QAASA,KACJd,EAAM4F,6BACNwC,GAAiB,EAAM,EAG3BnH,UAAU,eAAcE,SAAA,CACxBX,cAAA,OAAKS,UAAU,kBAAiBE,SAAC,WACjCX,cAAA,OAAKS,UAAU,UAASE,SAAC,mCAEZ,OAAtBnB,EAAMqI,YACbhI,EAAUQ,eAAA,OAAKC,QAASA,KACJd,EAAM4F,6BACNwC,GAAiB,EAAM,EAG3BnH,UAAU,aAAYE,SAAA,CACtBX,cAAA,OAAKS,UAAU,gBAAeE,SAAC,WAC/BX,cAAA,OAAKS,UAAU,UAASE,SAAC,+BAEZ,SAAtBnB,EAAMqI,YACbhI,EAAUQ,eAAA,OAAKC,QAASA,KACJd,EAAM4F,6BACNwC,GAAiB,EAAM,EAG3BnH,UAAU,eAAcE,SAAA,CACxBX,cAAA,OAAKS,UAAU,UAASE,SAAC,+BACzBX,cAAA,OAAKS,UAAU,kBAAiBE,SAAC,cAEpB,SAAtBnB,EAAMqI,YACbhI,EAAUQ,eAAA,OAAKC,QAASA,IAAIsH,GAAiB,GAC7BnH,UAAU,eAAcE,SAAA,CACxBX,cAAA,OAAKS,UAAU,UAASE,SAAC,gEACzBX,cAAA,OAAKS,UAAU,mBAAkBE,SAAC,cAErB,SAAtBnB,EAAMqI,cACbhI,EAAUG,cAAA,OAAKM,QAASA,IAAIsH,GAAiB,GAC9BnH,UAAU,UAASE,SAClBX,cAAA,OAAKS,UAAU,eAAcE,SAAC,2BAI/Cd,CACX,CC5DO,MAAMiI,EAAQ,CACjB,CACI,OAAU,wBACV,UAAa,MACb,MAAS,YACT,MAAS,iBACT,KAAQ,4IACRC,SAAS,IAIXC,EAAOF,EAAMG,QAAO,CAACC,EAAK9B,KAC5B,MAAM,OAAE+B,EAAM,UAAEC,EAAS,MAAEC,GAAUjC,EACrC,GAAK8B,EAAIC,GAEF,GAAKD,EAAIC,GAAQC,IAGjB,IAAKF,EAAIC,GAAQC,GAAWC,GAAQ,CACvC,MAAMC,EAAaJ,EAAIC,GACjBI,EAASL,EAAIC,GAAQC,GAC3BF,EAAGhD,wBAAA,GAAQgD,GAAG,IAAE,CAACC,GAAMjD,wBAAA,GAAQoD,GAAU,IAAE,CAACF,GAASlD,wBAAA,GAAQqD,GAAM,IAAE,CAACF,IAAQ,OAClF,MAPoC,CAChC,MAAMC,EAAaJ,EAAIC,GACvBD,EAAGhD,wBAAA,GAAQgD,GAAG,IAAE,CAACC,GAAMjD,wBAAA,GAAQoD,GAAU,IAAE,CAACF,GAAY,CAAE,CAACC,IAAQ,MACvE,MAJIH,EAAIC,GAAU,CAAE,CAACC,GAAY,CAAE,CAACC,IAAQ,IAS5C,OAAOH,CAAG,GACX,CAAC,GAESrH,EAAO2H,OAAOC,KAAKT,GAAMlI,KAAIqI,IACtC,MAAMG,EAAaE,OAAOC,KAAKT,EAAKG,IAASrI,KAAIsI,IAEtC,CAAElI,QAASkI,EAAWvI,QADd2I,OAAOC,KAAKT,EAAKG,GAAQC,IAAYtI,KAAIuI,IAAK,CAAOnI,QAASmI,UAGjF,MAAO,CAAEnI,QAASiI,EAAQtI,QAASyI,EAAY,ICvBnD,MAAMI,UAAYC,YACdC,YAAYpJ,GACRqJ,MAAMrJ,GACNsJ,KAAKjC,MAAQ,CACTkC,cAAe,GACfC,iBAAkBnI,EAElBoI,YAAazE,OAAOC,WACpByE,aAAc1E,OAAOE,YAErBjD,SAAW+C,OAAOC,YAAc,KACzBD,OAAOE,aAAe,KAExBF,OAAOC,YAAc,KACfD,OAAOE,aAAe,IACjCyE,WAAY3E,OAAOC,WAAaD,OAAOE,YAEvC0E,YAAY,EACZC,iBAAiB,EAEjBjJ,iBAAkB,GAClB0H,MAAO,GACPwB,UAAW,EACX1H,iBAAkB,OAClB2H,0BAA0B,EAC1BC,eAAe,EACfC,yBAAyB,EACzBC,kCAAkC,GAGtCC,MAAM,sDACDC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFjB,KAAKkB,SAAS,CAAEhB,iBAAkBe,EAAKlJ,MAAO,IAC/CoJ,OAAOC,IACNtF,QAAQsF,MAAM,SAAUA,EAAM,IAEtCpB,KAAKqB,cAAgBrB,KAAKqB,cAAclH,KAAK6F,MAC7CA,KAAKtC,mBAAqBsC,KAAKtC,mBAAmBvD,KAAK6F,MACvDA,KAAKvC,mBAAqBuC,KAAKvC,mBAAmBtD,KAAK6F,MACvDA,KAAKsB,gBAAkBtB,KAAKsB,gBAAgBnH,KAAK6F,MACjDA,KAAKuB,uCACDvB,KAAKuB,uCAAuCpH,KAAK6F,MACrDA,KAAKrC,YAAcqC,KAAKrC,YAAYxD,KAAK6F,MACzCA,KAAKwB,gBAAkBxB,KAAKwB,gBAAgBrH,KAAK6F,MACjDA,KAAKpC,WAAaoC,KAAKpC,WAAWzD,KAAK6F,MACvCA,KAAKyB,aAAezB,KAAKyB,aAAatH,KAAK6F,MAC3CA,KAAKzD,0BAA4ByD,KAAKzD,0BAA0BpC,KAAK6F,MACrEA,KAAK1D,2BAA6B0D,KAAK1D,2BAA2BnC,KAAK6F,MACvEA,KAAK0B,oBAAsB1B,KAAK0B,oBAAoBvH,KAAK6F,KAC7D,CA2BAqB,gBACI,GAAIrB,KAAKjC,MAAMiB,MAAMtG,OAAQ,CACzB,IAAIsG,EAAQ,IAAIgB,KAAKjC,MAAMiB,OAC3BA,EAAMgB,KAAKjC,MAAMyC,WAAWvB,aACgB0C,IAAxC3C,EAAMgB,KAAKjC,MAAMyC,WAAWvB,UAEgB,IAAxCD,EAAMgB,KAAKjC,MAAMyC,WAAWvB,QAEpCe,KAAKkB,SAAS,CAAElC,MAAOA,IACvB,IAAI4C,EAAc5C,EAAMgB,KAAKjC,MAAMyC,WACnCxE,YAAW,KAGP6E,MAAM,wDAAyD,CAC3DgB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUL,KAEvBd,MAAKC,GAAYA,EAASC,SACvBF,MAAMoB,IACHpG,QAAQC,IAAI,WAAYmG,EAAQ,IACjCf,OAAOC,IACNtF,QAAQsF,MAAM,SAAUA,EAAM,GAChC,GACP,IACP,CACJ,CACAE,kBACwC,SAAhCtB,KAAKjC,MAAMjF,kBAEXkH,KAAKkB,SAAS,CAAEpI,iBAAkB,SAC9BkH,KAAKjC,MAAMwC,kBACXP,KAAKO,kBACLP,KAAKkB,SAAS,CAAEX,iBAAiB,KAErCP,KAAKkB,SAAS,CAAER,eAAe,KAC3BV,KAAKjC,MAAM4C,yBACRX,KAAKjC,MAAM6C,oCACdZ,KAAKkB,SAAS,CAAEP,yBAAyB,IACzCX,KAAKkB,SAAS,CAAEN,kCAAkC,IAClDZ,KAAKkB,SAAS,CAAET,0BAA0B,OAI9CT,KAAKkB,SAAS,CAAEpI,iBAAkB,SAClCkH,KAAKkB,SAAS,CAAET,0BAA0B,IAElD,CACAF,kBAEIM,MAAM,sDAAuD,CACzDgB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUjC,KAAKjC,MAAMzG,oBAElCwJ,MAAKC,GAAYA,EAASC,SACvBF,MAAKG,IACF,IAAIkB,EAAenC,KAAKwB,gBAAgBP,EAAKjC,OAC7C,IAAK,IAAIoD,EAAI,EAAGA,EAAID,EAAazJ,OAAQ0J,IACjCD,EAAaC,GAAGnD,QAAQvG,SACW,MAA/ByJ,EAAaC,GAAGnD,QAAQ,GACxBkD,EAAaC,GAAGnD,SAAU,EAE1BkD,EAAaC,GAAGnD,SAAU,GAGtCe,KAAKkB,SAAS,CAAElC,MAAOmD,IACvBnC,KAAKkB,SAAS,CAAEV,UAAW,GAAI,IAChCW,OAAMkB,IAEL,MAAMC,EAAkBtC,KAAKjC,MAAMzG,iBAAiB6H,QAAO,CAACC,EAAKmD,KAC7D,MAAOlD,EAAQC,EAAWC,GAASgD,EAAKnK,MAAM,KAC9C,GAAKgH,EAAIC,GAEF,GAAKD,EAAIC,GAAQC,IAGjB,IAAKF,EAAIC,GAAQC,GAAWC,GAAQ,CACvC,MAAMC,EAAaJ,EAAIC,GACjBI,EAASL,EAAIC,GAAQC,GAC3BF,EAAGhD,wBAAA,GAAQgD,GAAG,IAAE,CAACC,GAAMjD,wBAAA,GAAQoD,GAAU,IAAE,CAACF,GAASlD,wBAAA,GAAQqD,GAAM,IAAE,CAACF,IAAQ,OAClF,MAPoC,CAChC,MAAMC,EAAaJ,EAAIC,GACvBD,EAAGhD,wBAAA,GAAQgD,GAAG,IAAE,CAACC,GAAMjD,wBAAA,GAAQoD,GAAU,IAAE,CAACF,GAAY,CAAE,CAACC,IAAQ,MACvE,MAJIH,EAAIC,GAAU,CAAE,CAACC,GAAY,CAAE,CAACC,IAAQ,IAS5C,OAAOH,CAAG,GACX,CAAC,GAEJtD,QAAQC,IAAI,CAAEuG,oBAEd,MAAMtD,EAAQwD,EAAYC,QAAOnI,IAAA,IAAC,OAAE+E,EAAM,UAAEC,EAAS,MAAEC,GAAOjF,EAAA,QAAOgI,KAAqBA,EAAgBjD,MAAaiD,EAAgBjD,GAAQC,MAAgBgD,EAAgBjD,GAAQC,GAAWC,EAAM,IACxMS,KAAKkB,SAAS,CAAElC,UAChBlD,QAAQC,IAAI,CAAEzE,iBAAkB0I,KAAKjC,MAAMzG,iBAAkBgL,kBAAiBtD,SAAQ,GAGlG,CACAuC,uCAAuCpJ,GACnC,IAAIuK,GAAmB,EACnBC,EAAsB,IAAI3C,KAAKjC,MAAMzG,kBACzC,GAAIqL,EAAoBjK,OAAS,EAC7B,IAAK,IAAI0J,EAAI,EAAGA,EAAIO,EAAoBjK,OAAQ0J,IACxCO,EAAoBP,KAAOjK,IAE3BuK,GAAmB,EACnBC,EAAoBtK,OAAO+J,EAAG,GAC9BpC,KAAKkB,SAAS,CAAE5J,iBAAkBqL,KAIzCD,IAEDC,EAAoBC,KAAKzK,GACzB6H,KAAKkB,SAAS,CAAE5J,iBAAkBqL,KAEtC3C,KAAKkB,SAAS,CAAEX,iBAAiB,IACjCP,KAAKkB,SAAS,CAAER,eAAe,GACnC,CACAhD,qBACQsC,KAAKjC,MAAMiB,MAAMtG,SACjBsH,KAAKjC,MAAMyC,UAAYR,KAAKjC,MAAMiB,MAAMtG,OAAS,EAC7CsH,KAAKkB,SAAS,CAAEV,UAAWR,KAAKjC,MAAMyC,UAAY,IAElDR,KAAKkB,SAAS,CAAEV,UAAW,IAEvC,CACA/C,qBACQuC,KAAKjC,MAAMiB,MAAMtG,SACjBsH,KAAKjC,MAAMyC,UAAY,EACnBR,KAAKkB,SAAS,CAAEV,UAAWR,KAAKjC,MAAMyC,UAAY,IAElDR,KAAKkB,SAAS,CAAEV,UAAWR,KAAKjC,MAAMiB,MAAMtG,OAAS,IAEjE,CACA8I,gBAAgBqB,GACZ,GAAIA,EAAgBnK,OAChB,IAAK,IAAI0J,EAAIS,EAAgBnK,OAAS,EAAG0J,GAAK,EAAGA,IAAK,CAClD,IAAIU,EAAcxH,KAAKyH,MAAMzH,KAAK0H,SAAWZ,GACzCa,EAAOJ,EAAgBT,GAC3BS,EAAgBT,GAAKS,EAAgBC,GACrCD,EAAgBC,GAAeG,CACnC,CAEJ,OAAOJ,CACX,CACAlF,cACI,GAAIqC,KAAKjC,MAAMiB,MAAMtG,OAAS,EAAG,CAC7B,IAAIyJ,EAAe,IAAInC,KAAKjC,MAAMiB,OAC9B8D,EAAc9C,KAAKjC,MAAMyC,UAC7B,KAAOsC,IAAgB9C,KAAKjC,MAAMyC,WAAasC,EAAc,GACzDA,EACIxH,KAAKyH,MAAMzH,KAAK0H,SAAWb,EAAazJ,OAAS,GAEzD,IAAIuK,EAAOd,EAAanC,KAAKjC,MAAMyC,WACnC2B,EAAanC,KAAKjC,MAAMyC,WAAa2B,EAAaW,GAClDX,EAAaW,GAAeG,EAC5BjD,KAAKkB,SAAS,CAAElC,MAAOmD,GAC3B,MACInC,KAAKtC,oBAEb,CACAE,aACI,GAAIoC,KAAKjC,MAAMiB,MAAMtG,OAAQ,CACzB,IAAIsG,EAAQ,IAAIgB,KAAKjC,MAAMiB,OAC3BA,EAAM3G,OAAO2H,KAAKjC,MAAMyC,UAAW,GAC/BR,KAAKjC,MAAMyC,YAAcR,KAAKjC,MAAMiB,MAAMtG,OAAS,GACnDsH,KAAKkB,SAAS,CAAEV,UAAW,IAE/BR,KAAKkB,SAAS,CAAElC,MAAOA,GAC3B,CACJ,CACAyC,aAAahK,GACTuI,KAAKkB,SAAS,CAAEf,YAAazE,OAAOC,aACpCqE,KAAKkB,SAAS,CAAEd,aAAc1E,OAAOE,cACrCoE,KAAKkB,SAAS,CACVvI,SAAW+C,OAAOC,YAAc,KACzBD,OAAOE,aAAe,KAExBF,OAAOC,YAAc,KACfD,OAAOE,aAAe,MAErCoE,KAAKkB,SAAS,CACVb,WAAY3E,OAAOC,WACfD,OAAOE,aAEnB,CACAsH,oBACIxH,OAAOyH,iBAAiB,SAAUnD,KAAKyB,aAC3C,CACA2B,uBACI1H,OAAOyH,iBAAiB,SAAUnD,KAAKyB,aAC3C,CACA4B,iBACI,IAAItM,EAAU,KAwBd,MAvBoC,SAAhCiJ,KAAKjC,MAAMjF,kBACRkH,KAAKjC,MAAMiB,MAAMtG,QACjBsH,KAAKjC,MAAMyC,UAAYR,KAAKjC,MAAMiB,MAAMtG,aACGiJ,IAA3C3B,KAAKjC,MAAMiB,MAAMgB,KAAKjC,MAAMyC,aAE/BzJ,EAAWG,cAAC4G,EAAM,CACdnG,UAAU,aACV0G,MAAM,gBACNC,UAAW0B,KAAKqB,cAChBtK,QAAS,KACToH,UAAQ6B,KAAKjC,MAAMiB,MAAMtG,QAErBsH,KAAKjC,MAAMyC,UAAYR,KAAKjC,MAAMiB,MAAMtG,aAGpCiJ,IADJ3B,KAAKjC,MAAMiB,MAAMgB,KAAKjC,MAAMyC,WAAWvB,UAGvCe,KAAKjC,MAAMiB,MAAMgB,KAAKjC,MAAMyC,WAAWvB,WAM5ClI,CACX,CACAuM,mBAcI,OAbgBtD,KAAKjC,MAAM4C,yBAES,SAAhCX,KAAKjC,MAAMjF,iBAEX5B,cAAA,OAAKS,UAAU,aAAYE,SACvBX,cAAC0H,EAAW,CACRC,cACCmB,KAAKjC,MAAM4C,wBACZ5B,YAAY,WAIpB,IAER,CACAwE,oBA+BI,OA9BgBvD,KAAKjC,MAAM0C,0BAES,SAAhCT,KAAKjC,MAAMjF,iBAEX5B,cAAA,OAAKS,UAAWqI,KAAKjC,MAAM0C,yBAA2B,0BAAuBkB,EAAWnK,QAASwI,KAAK1D,2BAA2BzE,SAC7HN,eAAA,OAAKI,UAAU,aAAYE,SAAA,CACvBX,cAAC0H,EAAW,CACRtC,2BAA4B0D,KAAK1D,2BACjCuC,cACCmB,KAAKjC,MAAM0C,yBACZ1B,YAAY,OAChB7H,cAAC0H,EAAW,CACRtC,2BAA4B0D,KAAK1D,2BACjCuC,cACCmB,KAAKjC,MAAM0C,yBACZ1B,YAAY,SAChB7H,cAAC0H,EAAW,CACRtC,2BAA4B0D,KAAK1D,2BACjCuC,cACCmB,KAAKjC,MAAM0C,yBACZ1B,YAAY,UAChB7H,cAAC0H,EAAW,CACRtC,2BAA4B0D,KAAK1D,2BACjCuC,cACCmB,KAAKjC,MAAM0C,yBACZ1B,YAAY,cAIxB,IAER,CACAxC,4BACQyD,KAAKjC,MAAM4C,yBACXX,KAAKkB,SAAS,CAAEP,yBAAyB,GAEjD,CACArE,6BACQ0D,KAAKjC,MAAM0C,0BACXT,KAAKkB,SAAS,CAAET,0BAA0B,GAElD,CACAiB,sBACI1B,KAAKkB,SAAS,CAAER,eAAgBV,KAAKjC,MAAM2C,eAC/C,CACA8C,SACI,OACIjM,eAAA,OAAKI,UAAU,MAAKE,SAAA,CACfmI,KAAKsD,mBACLtD,KAAKuD,oBACNrM,cAACuB,EAAK,CACFE,SAAUqH,KAAKjC,MAAMpF,SACrBZ,KAAMiI,KAAKjC,MAAMmC,iBACjB5I,iBAAkB0I,KAAKjC,MAAMzG,iBAC7BwB,iBAAkBkH,KAAKjC,MAAMjF,iBAC7BC,UAAW,CACP1B,mBACI2I,KAAKuB,0CAGjBrK,cAAC8F,EAAe,CACZrE,SAAUqH,KAAKjC,MAAMpF,SACrB4E,YAAayC,KAAKjC,MAAMiB,MAAMtG,OAC1BsH,KAAKjC,MAAMiB,MAAMgB,KAAKjC,MAAMyC,WAE5B,KACJhD,MAAO,CACHvE,aAAc+G,KAAKjC,MAAMyC,UACzB9H,OAAQsH,KAAKjC,MAAMiB,MAAMtG,QAE7BK,UAAW,CACP2E,mBAAoBsC,KAAKtC,mBACzBD,mBAAoBuC,KAAKvC,mBACzBE,YAAaqC,KAAKrC,YAClBC,WAAYoC,KAAKpC,WACjByD,cAAerB,KAAKqB,cACpB9E,0BACIyD,KAAKzD,0BACTD,2BACI0D,KAAK1D,2BACTgH,iBAAkBtD,KAAKsD,oBAG/BpM,cAAC4G,EAAM,CACHnG,UAAYqI,KAAKjC,MAAM2C,cAAoC,qBAApB,kBACvCrC,MAAuC,SAAhC2B,KAAKjC,MAAMjF,iBAA8B,aAAe,eAC/DwF,UAAW0B,KAAKsB,gBAChBvK,QAAS,KACToH,OAAwC,SAAhC6B,KAAKjC,MAAMjF,mBAEtBkH,KAAKqD,mBAGlB,EAGWzD,QCzZf6D,IAASD,OAAOtM,cAAC0I,EAAG,IAAK8D,SAASC,eAAe,Q","file":"static/js/main.0f105b3b.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\nimport \"./AccordianTab.css\"\r\n\r\nexport default function AccordianTab(props){\r\n    const [panelClassName, togglePanel] = useState('hidePanel');\r\n    let displayContent;\r\n    if (props.content){\r\n        displayContent =\r\n            props.content.map(\r\n                        (anotherTab) =>\r\n                            <AccordianTab\r\n                                key = { anotherTab.tabName }\r\n                                hash =\r\n                                    { props.hash + \"*\" + anotherTab.tabName }\r\n                                tabName = { anotherTab.tabName }\r\n                                content = { anotherTab.content }\r\n                                addOrRemoveSubject =\r\n                                    { props.addOrRemoveSubject }\r\n                                selectedSubjects =\r\n                                    { props.selectedSubjects }/>\r\n                            )\r\n    }\r\n    return (\r\n        <button\r\n            // nested tabs go from domain > subdomain > topic\r\n            onClick = {\r\n                !props.content ?\r\n                            (e) => {\r\n                                // if topic:\r\n                                    // add the topic to the list of selected\r\n                                    // subjects.\r\n                                props.addOrRemoveSubject(props.hash);\r\n                                e.stopPropagation();\r\n                                togglePanel( panelClassName === 'hidePanel' ?\r\n                                                'showPanel' : 'hidePanel' );\r\n                    }\r\n\r\n                            :\r\n                            (e) => {\r\n                                // if domain or subdomain:\r\n                                    // open the tab to show the next level.\r\n                                e.stopPropagation();\r\n                                togglePanel( panelClassName === 'hidePanel' ?\r\n                                                'showPanel' : 'hidePanel' );\r\n                            }\r\n                        }\r\n            className = { props.selectedSubjects.includes(props.hash) ?\r\n                            'accordionActive' : 'accordionInactive' }>\r\n                {props.tabName}\r\n            {/* Topics do not contain content and should not display their\r\n                panels, otherwise show panel depending on state\r\n                (changed  by onClick).*/}\r\n            <p className = { props.content ? panelClassName : 'hidePanel' }>\r\n                 {displayContent}\r\n            </p>\r\n        </button>\r\n    );\r\n}\r\n","import \"./TabHolder.css\"\r\nimport AccordianTab from './AccordianTab.jsx'\r\n\r\nexport default function TabHolder(props){\r\n    if (props.tabs){\r\n        const tabs = props.tabs.map(\r\n                        (tab) => <AccordianTab\r\n                                        key = { tab.tabName }\r\n                                        tabName = { tab.tabName }\r\n                                        content = { tab.content }\r\n                                        hash = { \"\" + tab.tabName }\r\n                                        addOrRemoveSubject =\r\n                                            { props.addOrRemoveSubject }\r\n                                        selectedSubjects =\r\n                                            {props.selectedSubjects }/>\r\n                                        )\r\n        return <div className=\"tabHolder\"> {tabs} </div>\r\n    }\r\n}\r\n","import './SelectedSubject.css'\r\n\r\nexport default function SelectedSubject(props){\r\n    // take the Subdomain and the Topic of: \"Domain*Subdomain*Topic\"\r\n    const buttonLabel = props.subject.split(\"*\").splice(1,2).join(\" \")\r\n    return (\r\n        <button key={props.selectedSubject} className = \"selectedSubject\"\r\n                onClick = { () => props.addOrRemoveSubject(props.subject) }>\r\n            { buttonLabel }\r\n        </button>\r\n    );\r\n}\r\n","import './SelectedSubjectsHolder.css'\r\nimport SelectedSubject from './SelectedSubject'\r\n\r\nexport default function SelectedSubjectsHolder(props){\r\n    const selectedSubjects = props.selectedSubjects.map(\r\n                                (selectedSubject) =>\r\n                                    <SelectedSubject\r\n                                        key={selectedSubject}\r\n                                        addOrRemoveSubject =\r\n                                            { props.addOrRemoveSubject }\r\n                                        subject = { selectedSubject }\r\n                                    />\r\n                            )\r\n    return (\r\n        <div className=\"selectedSubjectsHolder\">{ selectedSubjects }</div>\r\n    );\r\n}\r\n","// import React, { useEffect } from 'react'; \r\nimport './Modal.css';\r\nimport TabHolder from './TabHolder.jsx';\r\nimport SelectedSubjectsHolder from './SelectedSubjectsHolder';\r\n\r\nexport default function Modal(props){\r\n\r\n    const menuContent =\r\n        // https://loading.io/css/\r\n        !props.tabs.length?\r\n        <div className=\"modal\" style= {{ display: props.menuModalDisplay }}>\r\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n\r\n        :\r\n        props.isMobile ?\r\n        <div className=\"modal\" style= {{ display: props.menuModalDisplay }}>\r\n            <TabHolder\r\n                selectedSubjects = { props.selectedSubjects }\r\n                tabs = { props.tabs }\r\n                addOrRemoveSubject = { props.functions.addOrRemoveSubject }/>\r\n        </div>\r\n        :\r\n        <div className=\"modal\" style= {{ display: props.menuModalDisplay }}>\r\n            <TabHolder\r\n                selectedSubjects = { props.selectedSubjects }\r\n                tabs = { props.tabs }\r\n                addOrRemoveSubject = { props.functions.addOrRemoveSubject }/>\r\n            <SelectedSubjectsHolder\r\n                selectedSubjects = { props.selectedSubjects }\r\n                addOrRemoveSubject = { props.functions.addOrRemoveSubject }/>\r\n        </div>\r\n\r\n    return menuContent\r\n}\r\n","import React from 'react';\r\nimport './IndexDisplay.css'\r\n\r\nexport default function IndexDisplay(props){\r\n     const content = props.length > 0 ?\r\n                     <h5 className='index'>\r\n                               {props.currentIndex}\r\n                               /\r\n                               {props.length}\r\n                      </h5>\r\n                     :\r\n                     null\r\n      return content;\r\n}\r\n// style={{opacity:props.isMobile?.3:.3}}\r\n","// https://codesandbox.io/embed/01yl7knw70\r\n// https://codesandbox.io/embed/j0y0vpz59\r\n\r\nimport React, { useState } from 'react'\r\nimport { useSpring, animated as a, config } from 'react-spring'\r\nimport { useGesture  } from 'react-use-gesture'\r\n\r\nimport IndexDisplay from './IndexDisplay';\r\nimport './IndexDisplay.css';\r\n\r\n\r\n\r\nimport './Card.css'\r\n\r\nexport default function Card(props) {\r\n  // show front / back of card state.\r\n  const [flipped, setFlip] = useState(false)\r\n\r\n  const [dragFunctionCalled, setDragFunctionCalled] = useState(false)\r\n  const [entireCardOpacity, setCardOpacity] = useState(1)\r\n\r\n  // x,y position of card state. spring controls interpolation of values.\r\n  // const [{ x, y }, set] = useSpring(() => ({ x: 0, y: 0 }))\r\n  const [{ xy }, set] = useSpring(() => ({ xy: [0 , 0] }))\r\n\r\n\r\n  // controls onClick card spin and opacity of card content.\r\n  const {transform, opacity} = useSpring({\r\n    opacity: flipped ? 0 : 1,\r\n    transform: `perspective(75vw) rotateY(${flipped ? 0 : 180}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 }\r\n  })\r\n\r\n  const bind = useGesture({\r\n      // controls drag of card from position.\r\n      onDrag: ({down, movement, velocity})=>{\r\n          set({ xy: down ? movement : [0,0] })\r\n      },\r\n      // controls if card is thrown.\r\n      onDragEnd: ({ down, delta: [xDelta,yDelta],\r\n                    distance, direction: [xDir,yDir], velocity }) => {\r\n          // If you flick hard enough it should trigger the card to fly out\r\n          const trigger = velocity > .2\r\n          const dir = {\r\n                        x: Math.abs(xDir) > Math.abs(yDir) ?\r\n                                                    Math.round(xDir)\r\n                                                    :\r\n                                                    0,\r\n                        y: Math.abs(xDir) > Math.abs(yDir) ?\r\n                                                    0\r\n                                                    :\r\n                                                    Math.round(yDir)\r\n                      }\r\n          const x = trigger ?\r\n                    (200 + window.innerWidth) * dir.x\r\n                    :\r\n                    down ? xDelta : 0\r\n          const y = trigger ?\r\n                    (200 + window.innerHeight) * dir.y\r\n                    :\r\n                    down ? yDelta : 0\r\n          set({ xy: [x,y] })\r\n          if (props.onReleaseFunction && trigger){\r\n              // no matter the function called,\r\n                  // display the card front-facing\r\n              if (flipped){\r\n                  setFlip(false)\r\n                  console.log('hi')\r\n              }\r\n              // call the appropriate function depending on direction flicked.\r\n              props.onReleaseFunction(dir)\r\n              // stops the card from flipping onMouseUp.\r\n              setDragFunctionCalled(true)\r\n              setTimeout(()=>{\r\n                  // make the card invisible and bring it to the opposite side\r\n                  // of the screen to come in from offscreen\r\n                  setCardOpacity(0)\r\n                  set({ xy: [dir.x*-3000,dir.y*-3000] })\r\n                  // make the card visible and bring it back on screen\r\n                    // from the opposite direction from which it was thrown.\r\n                  setTimeout(()=>{\r\n                      setCardOpacity(1)\r\n                      set({ xy: [0,0] })},500)\r\n              },500)\r\n          }\r\n      },\r\n    }, config)\r\n  const index = <IndexDisplay\r\n                    currentIndex = { props.currentIndex + 1 }\r\n                    length = { props.length }\r\n                />\r\n  return (\r\n    <a.div\r\n        className=\"Card\"\r\n        onMouseUp= { () => {   if (dragFunctionCalled){\r\n                                    setDragFunctionCalled(false)\r\n                                    // toggle-off swipe help messages\r\n                                    props.toggleOffSwipeHelpMessages()\r\n                                } else {\r\n                                    // toggle-off click help message\r\n                                    props.toggleOffClickHelpMessage()\r\n                                    setFlip(!flipped)\r\n                                }\r\n                            }\r\n                    }\r\n        {...bind()}\r\n        style={{ opacity: entireCardOpacity,\r\n            transform: xy.interpolate((x, y) => `translate3d(${x}px, ${y}px, 0)`)\r\n        }}>\r\n          <a.div\r\n                className=\"c\"\r\n                 style={{ opacity,\r\n                          transform:\r\n                            transform.interpolate(t => `${t} rotateY(180deg)`)\r\n            }}>\r\n              <div className=\"label\">\r\n                  <p>{props.Domain} {props.Subdomain} {props.Topic}</p>\r\n                  <p>front</p>\r\n              </div>\r\n              <p className=\"content\">{props.front}</p>\r\n              { index }\r\n          </a.div>\r\n          <a.div className=\"c\"\r\n                  style={{ opacity: opacity.interpolate(o => 1 - o), transform:\r\n                           transform\r\n           }}>\r\n              <div className=\"label\">\r\n                  <p>{props.Domain} {props.Subdomain} {props.Topic}</p>\r\n                  <p>back</p>\r\n              </div>\r\n              <p className=\"content\">{props.back}</p>\r\n              { index }\r\n          </a.div>\r\n    </a.div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport \"./FlashcardHolder.css\"\r\n\r\nimport Card from \"./Card\"\r\n\r\n\r\nexport default function FlashcardHolder(props) {\r\n    const [calledFunction,setBackgroundMessage] = useState(null)\r\n    const showMessage = (message) => {\r\n        setTimeout(()=>{setBackgroundMessage(message)},100)\r\n        setTimeout(()=>{setBackgroundMessage(null)},1000)\r\n    }\r\n    const blankCardContent =\r\n        'Click on the menu button below to select subjects to study.'\r\n    const card = props.cardContent ?\r\n        <Card\r\n            currentIndex = { props.stats.currentIndex }\r\n            length = { props.stats.length }\r\n            isMobile = {props.isMobile}\r\n            front = { props.cardContent.front }\r\n            back = { props.cardContent.back }\r\n            Domain = { props.stats.length ?\r\n                            props.cardContent.Domain\r\n                            :\r\n                            null\r\n                        }\r\n            Subdomain = { props.stats.length ?\r\n                            props.cardContent.Subdomain\r\n                            :\r\n                            null\r\n                        }\r\n            Topic = { props.stats.length ?\r\n                            props.cardContent.Topic\r\n                            :\r\n                            null\r\n                        }\r\n            toggleOffClickHelpMessage =\r\n                { props.functions.toggleOffClickHelpMessage }\r\n            toggleOffSwipeHelpMessages =\r\n                { props.functions.toggleOffSwipeHelpMessages }\r\n            onReleaseFunction = { (dir) => {\r\n                        const {x,y} = dir\r\n                        if (x){\r\n                            if (x>0){\r\n                                props.functions.decrementCardIndex()\r\n                                showMessage(\"PREVIOUS\")\r\n                            }else if (x<0){\r\n                                props.functions.incrementCardIndex()\r\n                                showMessage(\"NEXT\")\r\n                            }\r\n                        } else if (y){\r\n                            if (y>0){\r\n                                props.functions.shuffleCard()\r\n                                showMessage(\"SHUFFLE\")\r\n                            } else if (y<0){\r\n                                props.functions.removeCard()\r\n                                showMessage(\"REMOVE\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n        />\r\n        :\r\n        <Card\r\n            toggleOffClickHelpMessage =\r\n                { props.functions.toggleOffClickHelpMessage }\r\n            toggleOffSwipeHelpMessages =\r\n                { props.functions.toggleOffSwipeHelpMessages }\r\n            isMobile = { props.isMobile }\r\n            front = { blankCardContent }\r\n            back = { blankCardContent }\r\n            Domain = { null }\r\n            Subdomain = { null }\r\n            Topic = { null }\r\n            onReleaseFunction = { (dir) => { } }\r\n        />\r\n    const backgroundMessage = calledFunction ?\r\n          <div className='backgroundMessage'>{ calledFunction }</div>\r\n                           :\r\n                           null\r\n    return <div className='flashcardHolder'>\r\n                { card }\r\n                { backgroundMessage }\r\n          </div>\r\n}\r\n","import \"./Button.css\"\r\nimport { useSpring, animated as a } from 'react-spring'\r\nimport { useState } from 'react'\r\n;\r\n\r\nexport default function Button(props) {\r\n    const [state, toggle] = useState(false)\r\n\r\n    const { x } = useSpring({ from: { x: 0 }, x: state ? 1 : 0, config: { duration: 1000 } })\r\n    let active = props.active ? ' active' : ''\r\n  return <a.button\r\n            title= { props.title }\r\n            className= { props.className ?\r\n                                props.className + active\r\n                                :\r\n                                \"button\" + active }\r\n            onClick={ () => {\r\n                        props.clickFunc();\r\n                        toggle(!state);\r\n                    }\r\n                }\r\n            onMouseOver={ () => {\r\n                        toggle(!state);\r\n                    }\r\n                }\r\n            style={{\r\n              transform: x\r\n                .interpolate({\r\n                  range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\r\n                  output: [1, 0.97, 0.9, 1.1, 0.9, 1.1, 1.03, 1]\r\n                    }).interpolate(x => `scale(${x})`)\r\n              }}>\r\n                { String.fromCharCode(props.content) }\r\n          </a.button>\r\n}\r\n","import \"./HelpMessage.css\"\r\nimport { useState } from 'react'\r\n\r\nexport default function HelpMessage(props){\r\n    const [shouldDisplay, setShouldDisplay] = useState(props.shouldDisplay)\r\n    let content = <div className=\"wrapper\"></div>\r\n    if (shouldDisplay){\r\n        if (props.messageType === \"right\"){\r\n            content = <div onClick={()=>{\r\n                                props.toggleOffSwipeHelpMessages();\r\n                                setShouldDisplay(false)\r\n                                        }\r\n                                }\r\n                           className=\"wrapper right\">\r\n                            <div className=\"message\">swipe right to go back to last card</div>\r\n                            <div className=\"arrow arrowright\">&#8594;</div>\r\n                      </div>\r\n        } else if (props.messageType === \"left\") {\r\n            content = <div onClick={()=>{\r\n                                props.toggleOffSwipeHelpMessages();\r\n                                setShouldDisplay(false)\r\n                                        }\r\n                                }\r\n                            className=\"wrapper left\">\r\n                            <div className=\"arrow arrowleft\">&#8592;</div>\r\n                            <div className=\"message\">swipe left to get next card</div>\r\n                          </div>\r\n        } else if (props.messageType === \"up\") {\r\n            content = <div onClick={()=>{\r\n                                props.toggleOffSwipeHelpMessages();\r\n                                setShouldDisplay(false)\r\n                                        }\r\n                                }\r\n                            className=\"wrapper up\">\r\n                            <div className=\"arrow arrowup\">&#8593;</div>\r\n                            <div className=\"message\">swipe up to remove card</div>\r\n                          </div>\r\n        } else if (props.messageType === \"down\") {\r\n            content = <div onClick={()=>{\r\n                                props.toggleOffSwipeHelpMessages();\r\n                                setShouldDisplay(false)\r\n                                        }\r\n                                }\r\n                            className=\"wrapper down\">\r\n                            <div className=\"message\">swipe down to shuffle card</div>\r\n                            <div className=\"arrow arrowdown\">&#8595;</div>\r\n                          </div>\r\n        } else if (props.messageType === \"menu\") {\r\n            content = <div onClick={()=>setShouldDisplay(false)}\r\n                            className=\"wrapper menu\">\r\n                            <div className=\"message\">Click the menu button when you are ready to start studying!</div>\r\n                            <div className=\"arrow arrowright\">&#8594;</div>\r\n                          </div>\r\n        } else if (props.messageType === \"card\") {\r\n            content = <div onClick={()=>setShouldDisplay(false)}\r\n                           className=\"wrapper\">\r\n                            <div className=\"message card\">click card to flip</div>\r\n                          </div>\r\n        }\r\n    }\r\n    return content;\r\n}\r\n","// export const data = {\r\nexport const cards = [\r\n    {\r\n        \"domain\": \"Programming languages\",\r\n        \"subdomain\": \"C++\",\r\n        \"topic\": \"Operators\",\r\n        \"front\": \"arrow operator\",\r\n        \"back\": \"A means of accessing a class member from outside the class.&#09;Automatically dereferences the pointer variable that points to the class.\",\r\n        flagged: false\r\n    }\r\n];\r\n\r\nconst dict = cards.reduce((acc, card) => {\r\n    const { domain, subdomain, topic } = card;\r\n    if (!acc[domain]) {\r\n        acc[domain] = { [subdomain]: { [topic]: true } }\r\n    } else if (!acc[domain][subdomain]) {\r\n        const subdomains = acc[domain];\r\n        acc = { ...acc, [domain]: { ...subdomains, [subdomain]: { [topic]: true } } }\r\n    } else if (!acc[domain][subdomain][topic]) {\r\n        const subdomains = acc[domain];\r\n        const topics = acc[domain][subdomain];\r\n        acc = { ...acc, [domain]: { ...subdomains, [subdomain]: { ...topics, [topic]: true } } }\r\n    }\r\n    return acc;\r\n}, {});\r\n\r\nexport const tabs = Object.keys(dict).map(domain => {\r\n    const subdomains = Object.keys(dict[domain]).map(subdomain => {\r\n        const topics = Object.keys(dict[domain][subdomain]).map(topic => ({ tabName: topic }));\r\n        return { tabName: subdomain, content: topics };\r\n    });\r\n    return { tabName: domain, content: subdomains };\r\n});\r\n\r\n\r\n\r\n\r\n/*\r\nexport const tabs = [\r\n    {\r\n        tabName: \"Programming languages\", content:\r\n            [\r\n                {\r\n                    tabName: \"C++\",\r\n                    content: [\r\n                        { tabName: \"Operators\" },\r\n                        { tabName: \"Variables\" }\r\n                    ]\r\n                },\r\n                {\r\n                    tabName: \"Python\",\r\n                    content: [\r\n                        { tabName: \"Decorators\" },\r\n                        { tabName: \"Classes\" }\r\n                    ]\r\n                },\r\n                {\r\n                    tabName: \"C#\",\r\n                    content: [\r\n                        { tabName: \"Garbage collection\" },\r\n                        { tabName: \"Variables\" }\r\n                    ]\r\n                },\r\n            ]\r\n    }\r\n]\r\n*/\r\n\r\n// export tabs;","import { Component, React } from 'react';\r\nimport './App.css';\r\nimport Modal from './MenuModalComponents/Modal'\r\nimport FlashcardHolder from './FlashcardComponents/FlashcardHolder'\r\nimport Button from \"./Button.jsx\"\r\nimport HelpMessage from \"./HelpMessage.jsx\"\r\nimport { cards as staticCards, tabs } from './SimulatedResponse/staticData'\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            responseCards: [],\r\n            possibleSubjects: tabs,\r\n\r\n            windowWidth: window.innerWidth,\r\n            windowHeight: window.innerHeight,\r\n\r\n            isMobile: (window.innerWidth <= 420\r\n                && window.innerHeight <= 750)\r\n                ||\r\n                (window.innerWidth <= 750\r\n                    && window.innerHeight <= 420),\r\n            isPortrait: window.innerWidth < window.innerHeight,\r\n\r\n            isDarkMode: true,\r\n            requestNewCards: false,\r\n\r\n            selectedSubjects: [],\r\n            cards: [],\r\n            cardIndex: 0,\r\n            menuModalDisplay: 'none',\r\n            displaySwipeHelpMessages: false,\r\n            flashMenuIcon: false,\r\n            displayClickHelpMessage: true,\r\n            clickMessageHaveNotBeenDisplayed: true\r\n        };\r\n        // Get data from the API with fetch to populate the possible subjects tabs\r\n        fetch('https://cs-flashcard-api.herokuapp.com/api/v1/tabs')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({ possibleSubjects: data.tabs })\r\n            }).catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n        this.flagFlashcard = this.flagFlashcard.bind(this);\r\n        this.incrementCardIndex = this.incrementCardIndex.bind(this);\r\n        this.decrementCardIndex = this.decrementCardIndex.bind(this);\r\n        this.toggleMenuModal = this.toggleMenuModal.bind(this);\r\n        this.addOrRemoveSubjectFromSelectedSubjects =\r\n            this.addOrRemoveSubjectFromSelectedSubjects.bind(this);\r\n        this.shuffleCard = this.shuffleCard.bind(this);\r\n        this.shuffleAllCards = this.shuffleAllCards.bind(this);\r\n        this.removeCard = this.removeCard.bind(this);\r\n        this.handleResize = this.handleResize.bind(this);\r\n        this.toggleOffClickHelpMessage = this.toggleOffClickHelpMessage.bind(this);\r\n        this.toggleOffSwipeHelpMessages = this.toggleOffSwipeHelpMessages.bind(this);\r\n        this.toggleFlashMenuIcon = this.toggleFlashMenuIcon.bind(this);\r\n    }\r\n    // buildTabs = (cards) => {\r\n    //     const dict = cards.reduce((acc, card) => {\r\n    //         const { Domain, Subdomain, Topic } = card;\r\n    //         if (!acc[Domain]) {\r\n    //             acc[Domain] = { [Subdomain]: { [Topic]: true } }\r\n    //         } else if (!acc[Domain][Subdomain]) {\r\n    //             const subdomains = acc[Domain];\r\n    //             acc = { ...acc, [Domain]: { ...subdomains, [Subdomain]: { [Topic]: true } } }\r\n    //         } else if (!acc[Domain][Subdomain][Topic]) {\r\n    //             const subdomains = acc[Domain];\r\n    //             const topics = acc[Domain][Subdomain];\r\n    //             acc = { ...acc, [Domain]: { ...subdomains, [Subdomain]: { ...topics, [Topic]: true } } }\r\n    //         }\r\n    //         return acc;\r\n    //     }, {});\r\n\r\n    //     const tabs = Object.keys(dict).map(domain => {\r\n    //         const subdomains = Object.keys(dict[domain]).map(subdomain => {\r\n    //             const topics = Object.keys(dict[domain][subdomain]).map(topic => ({ tabName: topic }));\r\n    //             return { tabName: subdomain, content: topics };\r\n    //         });\r\n    //         return { tabName: domain, content: subdomains };\r\n    //     });\r\n\r\n    //     return tabs;\r\n    // }\r\n    flagFlashcard() {\r\n        if (this.state.cards.length) {\r\n            let cards = [...this.state.cards]\r\n            cards[this.state.cardIndex].flagged =\r\n                cards[this.state.cardIndex].flagged === undefined\r\n                    ||\r\n                    cards[this.state.cardIndex].flagged === false ?\r\n                    true : false;\r\n            this.setState({ cards: cards })\r\n            let flaggedCard = cards[this.state.cardIndex];\r\n            setTimeout(() => {\r\n                // console.log(this.state.cards[this.state.cardIndex])\r\n                // Send the card to  to the API with fetch\r\n                fetch('https://cs-flashcard-api.herokuapp.com/api/v1/flagged', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(flaggedCard)\r\n                }\r\n                ).then(response => response.json())\r\n                    .then((success) => {\r\n                        console.log('success:', success);\r\n                    }).catch((error) => {\r\n                        console.error('Error:', error);\r\n                    });\r\n            }, 100)\r\n        }\r\n    }\r\n    toggleMenuModal() {\r\n        if (this.state.menuModalDisplay === 'flex') {\r\n            // close menu modal\r\n            this.setState({ menuModalDisplay: 'none' })\r\n            if (this.state.requestNewCards) {\r\n                this.requestNewCards()\r\n                this.setState({ requestNewCards: false })\r\n            }\r\n            this.setState({ flashMenuIcon: false })\r\n            if (this.state.displayClickHelpMessage\r\n                || this.state.clickMessageHaveNotBeenDisplayed) {\r\n                this.setState({ displayClickHelpMessage: false })\r\n                this.setState({ clickMessageHaveNotBeenDisplayed: false })\r\n                this.setState({ displaySwipeHelpMessages: true })\r\n            }\r\n        } else {\r\n            // open menu modal\r\n            this.setState({ menuModalDisplay: 'flex' })\r\n            this.setState({ displaySwipeHelpMessages: false })\r\n        }\r\n    }\r\n    requestNewCards() {\r\n        // Get data from the API with fetch\r\n        fetch('https://cs-flashcard-api.herokuapp.com/api/v1/cards', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(this.state.selectedSubjects)\r\n        }\r\n        ).then(response => response.json())\r\n            .then(data => {\r\n                let shuffleCards = this.shuffleAllCards(data.cards)\r\n                for (let i = 0; i < shuffleCards.length; i++) {\r\n                    if (shuffleCards[i].flagged.length) {\r\n                        if (shuffleCards[i].flagged[0] === 't')\r\n                            shuffleCards[i].flagged = true;\r\n                        else\r\n                            shuffleCards[i].flagged = false;\r\n                    }\r\n                }\r\n                this.setState({ cards: shuffleCards })\r\n                this.setState({ cardIndex: 0 })\r\n            }).catch(_ => {\r\n                // fallback to static data\r\n                const requestSubjects = this.state.selectedSubjects.reduce((acc, item) => {\r\n                    const [domain, subdomain, topic] = item.split(\"*\");\r\n                    if (!acc[domain]) {\r\n                        acc[domain] = { [subdomain]: { [topic]: true } }\r\n                    } else if (!acc[domain][subdomain]) {\r\n                        const subdomains = acc[domain];\r\n                        acc = { ...acc, [domain]: { ...subdomains, [subdomain]: { [topic]: true } } }\r\n                    } else if (!acc[domain][subdomain][topic]) {\r\n                        const subdomains = acc[domain];\r\n                        const topics = acc[domain][subdomain];\r\n                        acc = { ...acc, [domain]: { ...subdomains, [subdomain]: { ...topics, [topic]: true } } }\r\n                    }\r\n                    return acc;\r\n                }, {});\r\n\r\n                console.log({ requestSubjects });\r\n\r\n                const cards = staticCards.filter(({ domain, subdomain, topic }) => !!requestSubjects && !!requestSubjects[domain] && !!requestSubjects[domain][subdomain] && !!requestSubjects[domain][subdomain][topic]);\r\n                this.setState({ cards });\r\n                console.log({ selectedSubjects: this.state.selectedSubjects, requestSubjects, cards });\r\n\r\n            });\r\n    }\r\n    addOrRemoveSubjectFromSelectedSubjects(subject) {\r\n        let subjectIsPresent = false;\r\n        let newSelectedSubjects = [...this.state.selectedSubjects]\r\n        if (newSelectedSubjects.length > 0) {\r\n            for (let i = 0; i < newSelectedSubjects.length; i++) {\r\n                if (newSelectedSubjects[i] === subject) {\r\n                    // remove the entry\r\n                    subjectIsPresent = true;\r\n                    newSelectedSubjects.splice(i, 1)\r\n                    this.setState({ selectedSubjects: newSelectedSubjects })\r\n                }\r\n            }\r\n        }\r\n        if (!subjectIsPresent) {\r\n            // add the entry\r\n            newSelectedSubjects.push(subject)\r\n            this.setState({ selectedSubjects: newSelectedSubjects })\r\n        }\r\n        this.setState({ requestNewCards: true })\r\n        this.setState({ flashMenuIcon: true })\r\n    }\r\n    incrementCardIndex() {\r\n        if (this.state.cards.length) {\r\n            this.state.cardIndex < this.state.cards.length - 1 ?\r\n                this.setState({ cardIndex: this.state.cardIndex + 1 })\r\n                :\r\n                this.setState({ cardIndex: 0 })\r\n        }\r\n    }\r\n    decrementCardIndex() {\r\n        if (this.state.cards.length) {\r\n            this.state.cardIndex > 0 ?\r\n                this.setState({ cardIndex: this.state.cardIndex - 1 })\r\n                :\r\n                this.setState({ cardIndex: this.state.cards.length - 1 })\r\n        }\r\n    }\r\n    shuffleAllCards(unshuffledCards) {\r\n        if (unshuffledCards.length) {\r\n            for (let i = unshuffledCards.length - 1; i >= 0; i--) {\r\n                let randomIndex = Math.floor(Math.random() * i)\r\n                let temp = unshuffledCards[i]\r\n                unshuffledCards[i] = unshuffledCards[randomIndex]\r\n                unshuffledCards[randomIndex] = temp\r\n            }\r\n        }\r\n        return unshuffledCards // that are now shuffled...\r\n    }\r\n    shuffleCard() {\r\n        if (this.state.cards.length > 2) {\r\n            let shuffleCards = [...this.state.cards]\r\n            let randomIndex = this.state.cardIndex\r\n            while (randomIndex === this.state.cardIndex || randomIndex < 0) {\r\n                randomIndex =\r\n                    Math.floor(Math.random() * shuffleCards.length - 1)\r\n            }\r\n            let temp = shuffleCards[this.state.cardIndex]\r\n            shuffleCards[this.state.cardIndex] = shuffleCards[randomIndex]\r\n            shuffleCards[randomIndex] = temp\r\n            this.setState({ cards: shuffleCards })\r\n        } else {\r\n            this.incrementCardIndex()\r\n        }\r\n    }\r\n    removeCard() {\r\n        if (this.state.cards.length) {\r\n            let cards = [...this.state.cards]\r\n            cards.splice(this.state.cardIndex, 1)\r\n            if (this.state.cardIndex === this.state.cards.length - 1) {\r\n                this.setState({ cardIndex: 0 })\r\n            }\r\n            this.setState({ cards: cards })\r\n        }\r\n    }\r\n    handleResize(e) {\r\n        this.setState({ windowWidth: window.innerWidth });\r\n        this.setState({ windowHeight: window.innerHeight });\r\n        this.setState({\r\n            isMobile: (window.innerWidth <= 420\r\n                && window.innerHeight <= 750)\r\n                ||\r\n                (window.innerWidth <= 750\r\n                    && window.innerHeight <= 420)\r\n        });\r\n        this.setState({\r\n            isPortrait: window.innerWidth <\r\n                window.innerHeight\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n    componentWillUnmount() {\r\n        window.addEventListener(\"resize\", this.handleResize);\r\n    }\r\n    flagCardButton() {\r\n        let content = null\r\n        if (this.state.menuModalDisplay === 'none'\r\n            && this.state.cards.length\r\n            && this.state.cardIndex < this.state.cards.length\r\n            && this.state.cards[this.state.cardIndex] !== undefined\r\n        ) {\r\n            content = (<Button\r\n                className='flagButton'\r\n                title=\"Flag for edit\"\r\n                clickFunc={this.flagFlashcard}\r\n                content={0x2691}\r\n                active={this.state.cards.length\r\n                    &&\r\n                    this.state.cardIndex < this.state.cards.length\r\n                    &&\r\n                    this.state.cards[this.state.cardIndex].flagged\r\n                    !== undefined\r\n                    ?\r\n                    this.state.cards[this.state.cardIndex].flagged\r\n                    :\r\n                    false\r\n                }\r\n            />)\r\n        }\r\n        return content\r\n    }\r\n    clickHelpMessage() {\r\n        const content = this.state.displayClickHelpMessage\r\n            &&\r\n            this.state.menuModalDisplay === \"none\"\r\n            ?\r\n            <div className=\"click help\">\r\n                <HelpMessage\r\n                    shouldDisplay=\r\n                    {this.state.displayClickHelpMessage}\r\n                    messageType=\"card\"\r\n                />\r\n            </div>\r\n            :\r\n            null\r\n        return content;\r\n    }\r\n    swipeHelpMessages() {\r\n        const content = this.state.displaySwipeHelpMessages\r\n            &&\r\n            this.state.menuModalDisplay === \"none\"\r\n            ?\r\n            <div className={this.state.displaySwipeHelpMessages ? \"swipe-help-wrapper\" : undefined} onClick={this.toggleOffSwipeHelpMessages}>\r\n                <div className=\"swipe help\">\r\n                    <HelpMessage\r\n                        toggleOffSwipeHelpMessages={this.toggleOffSwipeHelpMessages}\r\n                        shouldDisplay=\r\n                        {this.state.displaySwipeHelpMessages}\r\n                        messageType=\"up\" />\r\n                    <HelpMessage\r\n                        toggleOffSwipeHelpMessages={this.toggleOffSwipeHelpMessages}\r\n                        shouldDisplay=\r\n                        {this.state.displaySwipeHelpMessages}\r\n                        messageType=\"left\" />\r\n                    <HelpMessage\r\n                        toggleOffSwipeHelpMessages={this.toggleOffSwipeHelpMessages}\r\n                        shouldDisplay=\r\n                        {this.state.displaySwipeHelpMessages}\r\n                        messageType=\"right\" />\r\n                    <HelpMessage\r\n                        toggleOffSwipeHelpMessages={this.toggleOffSwipeHelpMessages}\r\n                        shouldDisplay=\r\n                        {this.state.displaySwipeHelpMessages}\r\n                        messageType=\"down\" />\r\n                </div>\r\n            </div>\r\n            :\r\n            null;\r\n        return content;\r\n    }\r\n    toggleOffClickHelpMessage() {\r\n        if (this.state.displayClickHelpMessage) {\r\n            this.setState({ displayClickHelpMessage: false })\r\n        }\r\n    }\r\n    toggleOffSwipeHelpMessages() {\r\n        if (this.state.displaySwipeHelpMessages) {\r\n            this.setState({ displaySwipeHelpMessages: false })\r\n        }\r\n    }\r\n    toggleFlashMenuIcon() {\r\n        this.setState({ flashMenuIcon: !this.state.flashMenuIcon })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                {this.clickHelpMessage()}\r\n                {this.swipeHelpMessages()}\r\n                <Modal\r\n                    isMobile={this.state.isMobile}\r\n                    tabs={this.state.possibleSubjects}\r\n                    selectedSubjects={this.state.selectedSubjects}\r\n                    menuModalDisplay={this.state.menuModalDisplay}\r\n                    functions={{\r\n                        addOrRemoveSubject:\r\n                            this.addOrRemoveSubjectFromSelectedSubjects\r\n                    }}\r\n                />\r\n                <FlashcardHolder\r\n                    isMobile={this.state.isMobile}\r\n                    cardContent={this.state.cards.length ?\r\n                        this.state.cards[this.state.cardIndex]\r\n                        :\r\n                        null}\r\n                    stats={{\r\n                        currentIndex: this.state.cardIndex,\r\n                        length: this.state.cards.length\r\n                    }}\r\n                    functions={{\r\n                        incrementCardIndex: this.incrementCardIndex,\r\n                        decrementCardIndex: this.decrementCardIndex,\r\n                        shuffleCard: this.shuffleCard,\r\n                        removeCard: this.removeCard,\r\n                        flagFlashcard: this.flagFlashcard,\r\n                        toggleOffClickHelpMessage:\r\n                            this.toggleOffClickHelpMessage,\r\n                        toggleOffSwipeHelpMessages:\r\n                            this.toggleOffSwipeHelpMessages,\r\n                        clickHelpMessage: this.clickHelpMessage\r\n                    }}\r\n                />\r\n                <Button\r\n                    className={!this.state.flashMenuIcon ? 'menuButtonAlone' : 'flashingMenuButton'}\r\n                    title={this.state.menuModalDisplay === 'flex' ? \"Close Menu\" : \"Select Cards\"}\r\n                    clickFunc={this.toggleMenuModal}\r\n                    content={0x2630}\r\n                    active={this.state.menuModalDisplay === 'flex'}\r\n                />\r\n                {this.flagCardButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}